# Neste arquivo são descritas as etapas de análise da planilha 'teste2.csv', por meio da linha de comando do terminal Linux Mint

# Dentro do diretório local onde encontra-se o arquivo 'teste2.csv', foram realizadas as seguintes etapas:

# 1. Comando para extrair apenas os dados da primeira coluna (Samples) do arquivo 'teste2.csv' e direcioná-los a um novo arquivo nomeado como 'samples_id.csv'

    cat teste2.csv | cut -d ',' -f1 > samples_id.csv
    
# 2. Comando para extrair apenas os dados da terceira coluna (Population) do arquivo 'teste2.csv' e direcioná-los a um novo arquivo nomeado como 'population_id.csv'
   
   cat teste2.csv | cut -d ',' -f3 > population_id.csv
    
# 3. Comando para ordenar e excluir linhas com termos repetidos no arquivo 'samples_id.csv' e manter apenas as contagens únicas de cada termo em um novo arquivo .txt

    cat samples_id.csv | sort | uniq > samples_unique.txt
    
# 4. Comando para contar o número de linhas do arquivo 'samples_unique.txt' gerado na etapa 3, correspondente ao número de amostras -1 (com exceção do cabeçalho "Samples")
# O output deste comando no terminal deve ser igual a "3501", considerando as amostras + cabeçalho

     wc -l samples_unique.txt
    
# 5. Comando para ordenar e excluir linhas com termos repetidos no arquivo 'population_id.csv' e manter apenas as contagens únicas de cada termo em um novo arquivo .txt

    cat population_id.csv | sort | uniq > population_unique.txt
    
# 6. Comando para contar o número de linhas do arquivo 'population_unique.txt' gerado na etapa 5, correspondente ao número de populações -1 (com exceção do cabeçalho "Population")
# O output deste comando no terminal deve ser igual a "27", considerando as populações + cabeçalho

     wc -l population_unique.txt
     
# 7. Uma vez criado o arquivo 'population_unique.txt', onde temos a informação de todos os 26 códigos das populações, pode-se contar quantas vezes cada código se repete no arquivo 'teste2.csv' com o próximo comando:
#OBS: deve-se substituir 'X' pelo código de cada população para que se possa visualizar o número de output no terminal. Neste caso, cada número equivale a quantas amostras são associadas a cada população
       
       cat teste2.csv | grep 'X' -c 
       
# 8. Em uma nova planilha nomeada 'sample_pop_count_total.csv', incluiu-se os dados obtidos da etapa 7, onde na primeira coluna estão os códigos de cada população e na segunda coluna está o número de amostras a eles associadas.

# 9. Por fim, descreveu-se uma série de códigos com a biblioteca Matplotlib do Python no terminal para gerar um gráfico exibindo os dados da etapa 8. Estes códigos estão disponíveis neste mesmo repositório, no arquivo 'plot.py', assim como seu output 'plot.png'
